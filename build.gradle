plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.5'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'com.github.johnrengelman.shadow' version '7.1.0'
}

group = 'com.programacion.avanzada'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

repositories {
	mavenCentral()
}

dependencies {
	// Spring Boot starters
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springdoc:springdoc-openapi-ui:1.8.0'
	implementation 'software.amazon.awssdk:lambda:2.25.50'
	implementation 'software.amazon.awssdk:rds:2.25.50'
	implementation 'software.amazon.awssdk:secretsmanager:2.25.50'
	implementation 'software.amazon.awssdk:s3:2.25.50'
	implementation 'org.postgresql:postgresql:42.7.3'
	implementation 'com.amazonaws:aws-lambda-java-core:1.2.1'
	implementation 'com.resend:resend-java:3.1.0'
	implementation 'com.itextpdf:itext-core:8.0.4'


	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	runtimeOnly 'org.postgresql:postgresql'
}

tasks.withType(Test) {
	useJUnitPlatform()
	//exclude '**/com/programacion/avanzada/proyectotercercorte/**'
}

bootJar {
	dependsOn testClasses
	enabled = true
}

tasks.named('test') {
	useJUnitPlatform()
}

shadowJar {
	archiveClassifier.set('')
	archiveVersion.set('')
	mergeServiceFiles()
}

build.dependsOn shadowJar
